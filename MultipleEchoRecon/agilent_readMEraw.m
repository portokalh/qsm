function img = agilent_readMEraw(name,save_path,datatype,echoes)
%readMEraw:     Read raw multi-echo files generated by writeMEraw or other
%               functions (like Pseries) of Russell Dibb's METoolKit
%
%
% Example:      test_img = readMEraw('test',pwd,'int',1:8);

load dims;
if ~exist('name','var')
    name = '';
end
if ~exist('save_path','var')
    save_path = '';
end
if ~exist('datatype','var')
    datatype = 'short';
end 
if ~exist('echoes','var')
    echoes = 1:dims(4);
end

img = single(zeros([dims(1:3) length(echoes)]));
kecho = 0;
for k = echoes
    kecho = kecho+1;
    fprintf('   Reading echo %d/%d   -',k,dims(4));
    echoname = [name '_' datatype '_echo_' num2str(k) '.raw'];
%     echoname = ['split_me_trains_gaps.' num2str(k)];
    fid = fopen(fullfile(save_path,echoname));
    back = 0; time = 0;
    for z = 1:dims(3)
        [back,time] = progress(z,dims(3),'slice',back,time); % comment this line to eliminate progress countdown
        for y = 1:dims(2)   
            dump = fread(fid,[2 dims(1)], datatype);
            img(:,y,z,kecho) = squeeze(dump(2,1:end)+1i*dump(1,:)); % make single here?
        end
    end
end
fclose(fid);

end


%% Progress countdown function (great for tracking large file reads!)
function [new_backspaces,time] = progress(index,total,title,backspaces,time)
% [new_backspaces,time] = progress(index,total,title,backspaces,time)

if index > 1   
    time(index) = toc;
%     tdisp = ceil((total-index+1)*time(index));
    if index > 11
        tdisp = ceil((total-index+1)*mean(time(index-10:index)));
    else
        tdisp = ceil((total-index+1)*mean(time(2:index)));
    end
    if tdisp == 1
        str3 = 'second';
    else
        str3 = 'seconds';
    end
    for k = 1:backspaces
        fprintf('\b');
    end
    
    if tdisp > 59
        tm = floor(tdisp/60);
        if tm == 1
            str4 = 'minute';
        else
            str4 = 'minutes';
        end
        tdisp = mod(tdisp,60);
        str4 = [num2str(tm) ' ' str4 ', '];
    else
        str4 = '';
    end   
else
    time = zeros(1,total);
end

tic
str1 = ['   ' title ': ' num2str(index) '/' num2str(total)];
fprintf('%s',str1);

if (index == total && index > 1)
    str2 = [' - ' str4 num2str(tdisp) ' ' str3 ' remaining...'];
    fprintf('%s',str2);
    fprintf('\n');
elseif index > 1
    str2 = [' - about ' str4 num2str(tdisp) ' ' str3 ' remaining...'];
    fprintf('%s',str2);
elseif total > index
    str2 = ' - estimating time to completion...';
    fprintf('%s',str2);
else
    str2 = '';
    fprintf('\n');
end

new_backspaces = length(str1)+length(str2);

end

%% OLDER VERSION OF readMEraw.m
% load dims;
% img = zeros(dims);
% if ~exist('name','var')
%     name = '';
% end
% if ~exist('savepath','var')
%     save_path = '';
% end
% if ~exist('datatype','var')
%     datatype = 'float';
% end
% 
% 
% fidreal = fopen([save_path name '_real.raw']);
% fidimag = fopen([save_path name '_imag.raw']);
% 
% for k = 1:dims(4)
%     fprintf('   Reading echo %d/%d   -',k,dims(4));
%     back = 0; time = 0;
%     for z = 1:dims(3)
%         [back,time] = progress(z,dims(3),'slice',back,time); % comment this line to eliminate progress countdown
%         dumpreal = fread(fidreal,dims(1:2),datatype,'l');
%         dumpimag = fread(fidimag,dims(1:2),datatype,'l');
%         img(:,:,z,k) = squeeze(dumpreal+1i*dumpimag);
%     end
% end
% fclose(fidreal);
% fclose(fidimag);


%% ANOTHER OLDER VERSION - full real matrix followed by full imag matrix

% load dims;
% img = zeros(dims);
% if ~exist('name','var')
%     name = '';
% end
% if ~exist('savepath','var')
%     save_path = '';
% end
% if ~exist('datatype','var')
%     datatype = 'short';
% end
% if ~exist('echoes','var')
%     echoes = 1:dims(4);
% end
% 
% kecho = 0;
% for k = echoes
%     kecho = kecho+1;
%     fprintf('   Reading echo %d/%d   -',k,dims(4));
%     echoname = [name '_echo_' num2str(k) '.raw'];
%     fidreal = fopen([save_path echoname]);
%     fidimag = fopen([save_path echoname]);
%     fseek(fidimag,0,'eof');
%     totalbytes = ftell(fidimag);
%     fseek(fidimag,totalbytes/2,'bof');
%     back = 0; time = 0;
%     for z = 1:dims(3)
%         [back,time] = progress(z,dims(3),'slice',back,time); % comment this line to eliminate progress countdown
%         dumpreal = fread(fidreal,dims(1:2),datatype,'l');
%         dumpimag = fread(fidimag,dims(1:2),datatype,'l');
%         img(:,:,z,kecho) = squeeze(dumpreal+1i*dumpimag);
%     end
% end
% fclose(fidreal);
% fclose(fidimag);


